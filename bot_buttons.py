import os
import logging
from flask import Flask, request, jsonify
import requests
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ CORS-–∑–∞–ø—Ä–æ—Å—ã

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.environ.get("TOKEN", "f9LHodD0cOLX7UGehN1HCPp6Pp9mAu-ebAySBD4VVbbhY9vnNiz_DSFlvcfrHBckhjbx3WJ3-W1P32DpMDgP")

@app.route('/webhook', methods=['POST'])
def webhook():
    try:
        data = request.json
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ: {data}")  # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π –∑–∞–ø—Ä–æ—Å

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å–æ–æ–±—â–µ–Ω–∏—è
        if not data or 'message' not in data:
            return jsonify({'error': 'Invalid request format'}), 400

        message = data['message']
        chat_id = message['chat']['id']

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
        if 'text' in message and message['text'].startswith('/start'):
            response = {
                'method': 'sendMessage',
                'chat_id': chat_id,
                'text': '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ï–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                'reply_markup': {
                    'inline_keyboard': [
                        [{'text': 'üìö –¢–µ–æ—Ä–∏—è', 'url': 'https://chipper-flan-72a78b.netlify.app/theory'}],
                        [{'text': 'üìù –ó–∞–¥–∞—á–∏', 'callback_data': 'tasks'}],
                        [{'text': '‚ÑπÔ∏è –ü–æ–º–æ—â—å', 'callback_data': 'help'}]
                    ]
                }
            }
            return jsonify(response)

        # –û—Ç–≤–µ—Ç –Ω–∞ –¥—Ä—É–≥–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        return jsonify({
            'method': 'sendMessage',
            'chat_id': chat_id,
            'text': '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'
        })

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {str(e)}")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get("PORT", 8080)))